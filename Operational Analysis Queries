-- Part A: Operational Analysis Queries
-- 1. Average delivery time for all orders in each city
SELECT C.City, AVG(O.DeliveryTime) AS Average_Delivery_Time
FROM Orders O
JOIN Customers C ON O.CustomerID = C.CustomerID
GROUP BY C.City;

-- 2. Top 3 customers based on total order value
SELECT C.CustomerID, C.Name, SUM(O.TotalAmount) AS Total_Order_Value
FROM Orders O
JOIN Customers C ON O.CustomerID = C.CustomerID
GROUP BY C.CustomerID, C.Name
ORDER BY Total_Order_Value DESC
LIMIT 3;

-- 3. Top 3 most frequently ordered products in Mumbai
SELECT P.ProductID, P.ProductName, COUNT(D.OrderID) AS Order_Count
FROM OrderDetails D
JOIN Orders O ON D.OrderID = O.OrderID
JOIN Products P ON D.ProductID = P.ProductID
JOIN Customers C ON O.CustomerID = C.CustomerID
WHERE C.City = 'Mumbai'
GROUP BY P.ProductID, P.ProductName
ORDER BY Order_Count DESC
LIMIT 3;

-- 4. Number of customers who have not placed an order in the last 30 days
SELECT COUNT(*) AS Inactive_Customers
FROM Customers C
WHERE NOT EXISTS (
    SELECT 1
    FROM Orders O
    WHERE O.CustomerID = C.CustomerID AND O.OrderDate >= NOW() - INTERVAL 30 DAY
);

-- 5. Total revenue generated by each store
SELECT S.StoreID, SUM(O.TotalAmount) AS Total_Revenue
FROM Orders O
JOIN Stores S ON O.StoreID = S.StoreID
GROUP BY S.StoreID;

-- Part B: Customer Retention & Churn Analysis Queries
-- 1. Customers who placed only one order in the last 3 months
SELECT C.CustomerID, C.Name
FROM Customers C
JOIN Orders O ON C.CustomerID = O.CustomerID
WHERE O.OrderDate >= NOW() - INTERVAL 3 MONTH
GROUP BY C.CustomerID, C.Name
HAVING COUNT(O.OrderID) = 1;

-- 2. List of cities with high percentages of single-order customers
WITH Single_Order_Customers AS (
    SELECT C.City, COUNT(C.CustomerID) AS Single_Order_Count
    FROM Customers C
    JOIN Orders O ON C.CustomerID = O.CustomerID
    GROUP BY C.CustomerID, C.City
    HAVING COUNT(O.OrderID) = 1
),
Total_Customers AS (
    SELECT C.City, COUNT(C.CustomerID) AS Total_Count
    FROM Customers C
    GROUP BY C.City
)
SELECT S.City, (S.Single_Order_Count / T.Total_Count) * 100 AS Single_Order_Percentage
FROM Single_Order_Customers S
JOIN Total_Customers T ON S.City = T.City
WHERE T.Total_Count > 0;

-- 3. Features for a customer churn prediction model
-- - Order Frequency
-- - Average Order Value
-- - Time Since Last Order

-- 4. Strategies for improving customer retention
-- - Personalized Offers
-- - Loyalty Programs
-- - Feedback Mechanisms

-- Part C: Efficiency & Growth Strategy Analysis Queries
-- 1. Relationship between distance covered and average delivery time
SELECT AVG(D.DistanceCovered) AS Avg_Distance, AVG(O.DeliveryTime) AS Avg_Delivery_Time
FROM Delivery D
JOIN Orders O ON D.OrderID = O.OrderID;

-- 2. Strategies to optimize store-level operations and improve delivery efficiency
-- - Route Optimization
-- - Inventory Management
-- - Performance Metrics

-- 3. Revenue Maximization Formula
-- Revenue = Total Orders * Average Order Value

-- 4. Per Order Profit Maximization Formula
-- Profit = (Total Revenue - Total Cost) / Total Orders

-- 5. Holistic comparison of Blinkit, Zepto, Instamart, and BB
-- - Delivery Speed
-- - Product Variety
-- - Pricing Strategy
-- - Customer Satisfaction
